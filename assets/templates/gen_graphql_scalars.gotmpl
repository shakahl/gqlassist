// Code generated by gen.go; DO NOT EDIT.

package {{ pkgname }}

import (
"time"

"github.com/google/uuid"
)

{{ if false -}}
	type (
	// Boolean represents true or false values.
	Boolean bool

	// Float represents signed double-precision fractional values as
	// specified by IEEE 754.
	Float float64

	// ID represents a unique identifier that is Base64 obfuscated. It
	// is often used to refetch an object or as key for a cache. The ID
	// type appears in a JSON response as a String; however, it is not
	// intended to be human-readable. When expected as an input type,
	// any string (such as "VXNlci0xMA==") or integer (such as 4) input
	// value will be accepted as an ID.
	// ID interface{}
	ID string

	// Int represents non-fractional signed whole numeric values.
	// Int can represent values between -(2^31) and 2^31 - 1.
	Int int32

	// String represents textual data as UTF-8 character sequences.
	// This type is most often used by GraphQL to represent free-form
	// human-readable text.
	String string
	)

	// NewBoolean is a helper to make a new *Boolean.
	func NewBoolean(v Boolean) *Boolean { return &v }

	// NewFloat is a helper to make a new *Float.
	func NewFloat(v Float) *Float { return &v }

	// NewID is a helper to make a new *ID.
	func NewID(v ID) *ID { return &v }

	// NewInt is a helper to make a new *Int.
	func NewInt(v Int) *Int { return &v }

	// NewString is a helper to make a new *String.
	func NewString(v String) *String { return &v }
{{- end }}

{{ range .data.__schema.types | filterBy "kind" "SCALAR" | sortByName -}}
	{{- if and (eq .kind "SCALAR") (not (isExcluded .name)) -}}
		{{- template "scalar" . -}}
	{{- end -}}
{{- end }}

{{- define "scalar" -}}
	// {{ .name | scalarIdentifier }} @graphql="{{ .name }}" {{if .description}}{{.description | clean | formatDescription}}{{end}}
	type {{ .name | scalarIdentifier }} {{ .name | scalarType }}

	// New{{ .name | scalarIdentifier }} is a helper to make a new *{{ .name | scalarIdentifier }}.
	func New{{ .name | scalarIdentifier }}(v {{ .name | scalarIdentifier }}) *{{ .name | scalarIdentifier }} { return &v }
{{ end -}}

